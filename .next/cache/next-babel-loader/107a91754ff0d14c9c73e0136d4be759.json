{"ast":null,"code":"var _jsxFileName = \"E:\\\\AATrabalhoG\\\\react\\\\txen\\\\pages\\\\colorname.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport { useState } from 'react';\n\nconst colorName = () => {\n  const {\n    0: color,\n    1: setColor\n  } = useState('');\n  let timeout;\n\n  const getData = async e => {\n    // e.persist();\n    // clearTimeout(timeout);\n    // const value = e.target.value;\n    // setColor(value);\n    // timeout = window.setTimeout(async () => {\n    if (color.match(/[0-9a-fA-F]+/)) {\n      const res = await fetch(`https://www.thecolorapi.com/id?hex=${color}`);\n      const data = await res.json();\n      console.log(data.name.value);\n    } else console.log('error'); // }, 1000);\n\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Get a random color\"), __jsx(\"div\", {\n    className: \"input--container my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Your color\",\n    maxLength: 6,\n    onChange: e => {\n      return setColor(e.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"hashtag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"#\")), __jsx(\"p\", {\n    className: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Your color's name:\", ' ', __jsx(\"span\", {\n    className: \"color--name\",\n    style: {\n      color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"PURPLE\")));\n};\n\nexport default colorName;","map":{"version":3,"sources":["E:/AATrabalhoG/react/txen/pages/colorname.tsx"],"names":["Layout","useState","colorName","color","setColor","timeout","getData","e","match","res","fetch","data","json","console","log","name","value","target"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAsC,OAAtC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAII,OAAJ;;AAEA,QAAMC,OAAO,GAAG,MAAOC,CAAP,IAA4C;AAC1D;AACA;AAEA;AACA;AAEA;AACA,QAAIJ,KAAK,CAACK,KAAN,CAAY,cAAZ,CAAJ,EAAiC;AAC/B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCP,KAAM,EAA7C,CAAvB;AACA,YAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAL,CAAUC,KAAtB;AACD,KALD,MAKOH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAbmD,CAc1D;;AACD,GAfD;;AAiBA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAGE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,SAAS,EAAE,CAJb;AAKE,IAAA,QAAQ,EAAGP,CAAD,IAAO;AACf,aAAOH,QAAQ,CAACG,CAAC,CAACU,MAAF,CAASD,KAAV,CAAf;AACD,KAPH;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXF,CAHF,EAiBE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqB,GADrB,EAEE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,KAAK,EAAE;AAAEb,MAAAA;AAAF,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAjBF,CADF;AA0BD,CAhDD;;AAkDA,eAAeD,SAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport { useState, ChangeEvent } from 'react';\r\n\r\nconst colorName = () => {\r\n  const [color, setColor] = useState('');\r\n\r\n  let timeout: number;\r\n\r\n  const getData = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    // e.persist();\r\n    // clearTimeout(timeout);\r\n\r\n    // const value = e.target.value;\r\n    // setColor(value);\r\n\r\n    // timeout = window.setTimeout(async () => {\r\n    if (color.match(/[0-9a-fA-F]+/)) {\r\n      const res = await fetch(`https://www.thecolorapi.com/id?hex=${color}`);\r\n      const data = await res.json();\r\n\r\n      console.log(data.name.value);\r\n    } else console.log('error');\r\n    // }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"title\">Get a random color</h1>\r\n\r\n      <div className=\"input--container my-5\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Your color\"\r\n          maxLength={6}\r\n          onChange={(e) => {\r\n            return setColor(e.target.value);\r\n          }}\r\n          required\r\n        />\r\n        <span className=\"hashtag\">#</span>\r\n      </div>\r\n\r\n      <p className=\"desc\">\r\n        Your color's name:{' '}\r\n        <span className=\"color--name\" style={{ color }}>\r\n          PURPLE\r\n        </span>\r\n      </p>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default colorName;\r\n"]},"metadata":{},"sourceType":"module"}