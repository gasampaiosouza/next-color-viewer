{"ast":null,"code":"var _jsxFileName = \"E:\\\\AATrabalhoG\\\\react\\\\txen\\\\pages\\\\colorname.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/Layout';\nimport { useState } from 'react';\nimport { Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst colorName = () => {\n  const {\n    0: colorName,\n    1: setColorName\n  } = useState('');\n  const {\n    0: color,\n    1: setColor\n  } = useState({\n    color: '',\n    error: false\n  });\n  let timer;\n\n  function getData(value) {\n    const time = 1000;\n    clearTimeout(timer);\n    timer = window.setTimeout(() => {\n      if (value.match(/[0-9a-fA-F]+/)) {\n        setColor(_objectSpread(_objectSpread({}, color), {}, {\n          color: `#${value}`\n        }));\n        fetch(`https://www.thecolorapi.com/id?hex=${value}`).then(res => res.json()).then(data => setColorName(data.name.value));\n      } else setColor(_objectSpread(_objectSpread({}, color), {}, {\n        error: true\n      }));\n    }, time);\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Get any color name\"), __jsx(\"div\", {\n    className: \"input--container my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Your color\",\n    maxLength: 6,\n    onChange: e => getData(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"hashtag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"#\", __jsx(\"span\", {\n    className: \"color--bar\",\n    style: {\n      background: color.error ? 'red' : color['color']\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))), __jsx(\"p\", {\n    className: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Your color's name: \", __jsx(\"span\", {\n    className: \"color--name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 28\n    }\n  }, colorName)), __jsx(Message, {\n    negative: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"We're sorry we can't apply that discount\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"That offer has expired\")));\n};\n\nexport default colorName;","map":{"version":3,"sources":["E:/AATrabalhoG/react/txen/pages/colorname.tsx"],"names":["Layout","useState","Message","colorName","setColorName","color","setColor","error","timer","getData","value","time","clearTimeout","window","setTimeout","match","fetch","then","res","json","data","name","e","target","background"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAO,kCAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAA,OAACA,SAAD;AAAA,OAAYC;AAAZ,MAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC;AACjCI,IAAAA,KAAK,EAAE,EAD0B;AAEjCE,IAAAA,KAAK,EAAE;AAF0B,GAAD,CAAlC;AAKA,MAAIC,KAAJ;;AAEA,WAASC,OAAT,CAAiBC,KAAjB,EAAgC;AAC9B,UAAMC,IAAI,GAAG,IAAb;AACAC,IAAAA,YAAY,CAACJ,KAAD,CAAZ;AAEAA,IAAAA,KAAK,GAAGK,MAAM,CAACC,UAAP,CAAkB,MAAM;AAC9B,UAAIJ,KAAK,CAACK,KAAN,CAAY,cAAZ,CAAJ,EAAiC;AAC/BT,QAAAA,QAAQ,iCACHD,KADG;AAENA,UAAAA,KAAK,EAAG,IAAGK,KAAM;AAFX,WAAR;AAKAM,QAAAA,KAAK,CAAE,sCAAqCN,KAAM,EAA7C,CAAL,CACGO,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUhB,YAAY,CAACgB,IAAI,CAACC,IAAL,CAAUX,KAAX,CAF9B;AAGD,OATD,MAUEJ,QAAQ,iCACHD,KADG;AAENE,QAAAA,KAAK,EAAE;AAFD,SAAR;AAIH,KAfO,EAeLI,IAfK,CAAR;AAgBD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAGE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,SAAS,EAAE,CAJb;AAKE,IAAA,QAAQ,EAAGW,CAAD,IAAOb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASb,KAAV,CAL1B;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK,EAAE;AAAEc,MAAAA,UAAU,EAAEnB,KAAK,CAACE,KAAN,GAAc,KAAd,GAAsBF,KAAK,CAAC,OAAD;AAAzC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,CAHF,EAqBE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACqB;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BF,SAA/B,CADrB,CArBF,EAyBE,MAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,CAzBF,CADF;AAmCD,CAlED;;AAoEA,eAAeA,SAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport { useState } from 'react';\r\n\r\nimport { Message } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst colorName = () => {\r\n  const [colorName, setColorName] = useState('');\r\n  const [color, setColor] = useState({\r\n    color: '',\r\n    error: false,\r\n  });\r\n\r\n  let timer: number;\r\n\r\n  function getData(value: string) {\r\n    const time = 1000;\r\n    clearTimeout(timer);\r\n\r\n    timer = window.setTimeout(() => {\r\n      if (value.match(/[0-9a-fA-F]+/)) {\r\n        setColor({\r\n          ...color,\r\n          color: `#${value}`,\r\n        });\r\n\r\n        fetch(`https://www.thecolorapi.com/id?hex=${value}`)\r\n          .then((res) => res.json())\r\n          .then((data) => setColorName(data.name.value));\r\n      } else\r\n        setColor({\r\n          ...color,\r\n          error: true,\r\n        });\r\n    }, time);\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"title\">Get any color name</h1>\r\n\r\n      <div className=\"input--container my-5\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Your color\"\r\n          maxLength={6}\r\n          onChange={(e) => getData(e.target.value)}\r\n          required\r\n        />\r\n        <span className=\"hashtag\">\r\n          #\r\n          <span\r\n            className=\"color--bar\"\r\n            style={{ background: color.error ? 'red' : color['color'] }}\r\n          ></span>\r\n        </span>\r\n      </div>\r\n\r\n      <p className=\"desc\">\r\n        Your color's name: <span className=\"color--name\">{colorName}</span>\r\n      </p>\r\n\r\n      <Message negative>\r\n        <Message.Header>\r\n          We're sorry we can't apply that discount\r\n        </Message.Header>\r\n        <p>That offer has expired</p>\r\n      </Message>\r\n      {/* {color.error ? <Message error /> : <></>} */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default colorName;\r\n"]},"metadata":{},"sourceType":"module"}