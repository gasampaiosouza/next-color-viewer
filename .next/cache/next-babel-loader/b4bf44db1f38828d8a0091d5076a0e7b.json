{"ast":null,"code":"var _jsxFileName = \"E:\\\\AATrabalhoG\\\\react\\\\txen\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\n\nconst IndexPage = ({\n  color: {\n    name: {\n      value\n    }\n  }\n}) => {\n  console.log(value);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container d-flex flex-column justify-content-center align-items-center mt-4\",\n    style: {\n      height: '75vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"title my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Welcome to Color View!\"), __jsx(\"p\", {\n    className: \"desc mb-4 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"What do you want to do?\"), __jsx(\"div\", {\n    className: \"btn--container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/random\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary mr-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Get some random color\")), __jsx(Link, {\n    href: \"/colorname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Get some color name\")))));\n}; // fetch function\n\n\nexport const getStaticProps = async () => {\n  const res = await fetch('https://www.thecolorapi.com/id?hex=24B1E0');\n  return {\n    props: {\n      color: await res.json()\n    }\n  };\n};\nexport default IndexPage;\n/*\r\nfunction getRandomColor() {\r\n  var letters = '0123456789ABCDEF';\r\n  var color = '#';\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n\r\n  return color;\r\n}*/","map":{"version":3,"sources":["E:/AATrabalhoG/react/txen/pages/index.tsx"],"names":["Layout","Link","IndexPage","color","name","value","console","log","height","getStaticProps","res","fetch","props","json"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAUA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADD;AADU,CAAD,KAID;AACfC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,6EADZ;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,EAKE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALF,EAOE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,EAOE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAPF,CAPF,CADF,CADF;AAuBD,CA9BD,C,CAgCA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAAD,CAAvB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLT,MAAAA,KAAK,EAAE,MAAMO,GAAG,CAACG,IAAJ;AADR;AADF,GAAP;AAKD,CARM;AAUP,eAAeX,SAAf;AAEA","sourcesContent":["import Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\n\r\ntype colorType = {\r\n  color: {\r\n    name: {\r\n      value: string;\r\n    };\r\n  };\r\n};\r\n\r\nconst IndexPage = ({\r\n  color: {\r\n    name: { value },\r\n  },\r\n}: colorType) => {\r\n  console.log(value);\r\n\r\n  return (\r\n    <Layout>\r\n      <div\r\n        className=\"container d-flex flex-column justify-content-center align-items-center mt-4\"\r\n        style={{ height: '75vh' }}\r\n      >\r\n        <h1 className=\"title my-0\">Welcome to Color View!</h1>\r\n        <p className=\"desc mb-4 mt-3\">What do you want to do?</p>\r\n\r\n        <div className=\"btn--container\">\r\n          <Link href=\"/random\">\r\n            <button className=\"btn btn-primary mr-5\">\r\n              Get some random color\r\n            </button>\r\n          </Link>\r\n\r\n          <Link href=\"/colorname\">\r\n            <button className=\"btn btn-primary\">Get some color name</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// fetch function\r\nexport const getStaticProps = async () => {\r\n  const res = await fetch('https://www.thecolorapi.com/id?hex=24B1E0');\r\n\r\n  return {\r\n    props: {\r\n      color: await res.json(),\r\n    },\r\n  };\r\n};\r\n\r\nexport default IndexPage;\r\n\r\n/*\r\nfunction getRandomColor() {\r\n  var letters = '0123456789ABCDEF';\r\n  var color = '#';\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n\r\n  return color;\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}