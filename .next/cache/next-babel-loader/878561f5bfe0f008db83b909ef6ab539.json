{"ast":null,"code":"var _jsxFileName = \"E:\\\\AATrabalhoG\\\\react\\\\txen\\\\pages\\\\colorname.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport { useState } from 'react';\n\nconst colorName = () => {\n  const {\n    0: color,\n    1: setColor\n  } = useState('');\n\n  if (color.match(/[0-9a-fA-F]+/)) {\n    fetch(`https://www.thecolorapi.com/id?hex=${color}`).then(res => res.json()).then(data => console.log(data.name.value));\n  } else console.log('error');\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Get a random color\"), __jsx(\"div\", {\n    className: \"input--container my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Your color\",\n    maxLength: 6,\n    onChange: e => setColor(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"hashtag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"#\")), __jsx(\"p\", {\n    className: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Your color's name:\", ' ', __jsx(\"span\", {\n    className: \"color--name\",\n    style: {\n      color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"PURPLE\")));\n};\n\nexport default colorName;","map":{"version":3,"sources":["E:/AATrabalhoG/react/txen/pages/colorname.tsx"],"names":["Layout","useState","colorName","color","setColor","match","fetch","then","res","json","data","console","log","name","value","e","target"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAsC,OAAtC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,EAAD,CAAlC;;AAEA,MAAIE,KAAK,CAACE,KAAN,CAAY,cAAZ,CAAJ,EAAiC;AAC/BC,IAAAA,KAAK,CAAE,sCAAqCH,KAAM,EAA7C,CAAL,CACGI,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAL,CAAUC,KAAtB,CAFlB;AAGD,GAJD,MAIOH,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAEP,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAGE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,SAAS,EAAE,CAJb;AAKE,IAAA,QAAQ,EAAGG,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASF,KAAV,CAL3B;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATF,CAHF,EAeE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqB,GADrB,EAEE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,KAAK,EAAE;AAAEX,MAAAA;AAAF,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAfF,CADF;AAwBD,CAjCD;;AAmCA,eAAeD,SAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport { useState, ChangeEvent } from 'react';\r\n\r\nconst colorName = () => {\r\n  const [color, setColor] = useState('');\r\n\r\n  if (color.match(/[0-9a-fA-F]+/)) {\r\n    fetch(`https://www.thecolorapi.com/id?hex=${color}`)\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data.name.value));\r\n  } else console.log('error');\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"title\">Get a random color</h1>\r\n\r\n      <div className=\"input--container my-5\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Your color\"\r\n          maxLength={6}\r\n          onChange={(e) => setColor(e.target.value)}\r\n          required\r\n        />\r\n        <span className=\"hashtag\">#</span>\r\n      </div>\r\n\r\n      <p className=\"desc\">\r\n        Your color's name:{' '}\r\n        <span className=\"color--name\" style={{ color }}>\r\n          PURPLE\r\n        </span>\r\n      </p>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default colorName;\r\n"]},"metadata":{},"sourceType":"module"}