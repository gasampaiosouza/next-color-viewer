{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\AATrabalhoG\\\\react\\\\txen\\\\pages\\\\colorname.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport { useState } from 'react';\n\nvar colorName = function colorName() {\n  _s();\n\n  var _useState = useState(''),\n      colorName = _useState[0],\n      setColorName = _useState[1];\n\n  var _useState2 = useState(''),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var timer;\n\n  function getData(value) {\n    var time = 1000;\n    clearTimeout(timer);\n    timer = window.setTimeout(function () {\n      if (value.match(/[0-9a-fA-F]+/)) {\n        setColor(\"#\".concat(value));\n        fetch(\"https://www.thecolorapi.com/id?hex=\".concat(value)).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          return setColorName(data.name.value);\n        });\n      } else console.log('error');\n    }, time);\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Get any color name\"), __jsx(\"div\", {\n    className: \"input--container my-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Your color\",\n    maxLength: 6,\n    onChange: function onChange(e) {\n      return getData(e.target.value);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"hashtag\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"#\", __jsx(\"span\", {\n    className: \"color--bar\",\n    style: {\n      background: color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }))), __jsx(\"p\", {\n    className: \"desc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Your color's name: \", __jsx(\"span\", {\n    className: \"color--name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 28\n    }\n  }, colorName)));\n};\n\n_s(colorName, \"dgwdTbUWzwevjpMs7OBBzBI+p+s=\");\n\nexport default colorName;","map":{"version":3,"sources":["E:/AATrabalhoG/react/txen/pages/colorname.tsx"],"names":["Layout","useState","colorName","setColorName","color","setColor","timer","getData","value","time","clearTimeout","window","setTimeout","match","fetch","then","res","json","data","name","console","log","e","target","background"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAsC,OAAtC;;AAEA,IAAMC,SAAS,GAAG,qBAAM;AAAA;;AAAA,kBACYD,QAAQ,CAAC,EAAD,CADpB;AAAA,MACfC,SADe;AAAA,MACJC,YADI;;AAAA,mBAEIF,QAAQ,CAAC,EAAD,CAFZ;AAAA,MAEfG,KAFe;AAAA,MAERC,QAFQ;;AAItB,MAAIC,KAAJ;;AAEA,WAASC,OAAT,CAAiBC,KAAjB,EAAgC;AAC9B,QAAMC,IAAI,GAAG,IAAb;AACAC,IAAAA,YAAY,CAACJ,KAAD,CAAZ;AAEAA,IAAAA,KAAK,GAAGK,MAAM,CAACC,UAAP,CAAkB,YAAM;AAC9B,UAAIJ,KAAK,CAACK,KAAN,CAAY,cAAZ,CAAJ,EAAiC;AAC/BR,QAAAA,QAAQ,YAAKG,KAAL,EAAR;AAEAM,QAAAA,KAAK,8CAAuCN,KAAvC,EAAL,CACGO,IADH,CACQ,UAACC,GAAD;AAAA,iBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,SADR,EAEGF,IAFH,CAEQ,UAACG,IAAD;AAAA,iBAAUf,YAAY,CAACe,IAAI,CAACC,IAAL,CAAUX,KAAX,CAAtB;AAAA,SAFR;AAGD,OAND,MAMOY,OAAO,CAACC,GAAR,CAAY,OAAZ;AACR,KARO,EAQLZ,IARK,CAAR;AASD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAGE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,SAAS,EAAE,CAJb;AAKE,IAAA,QAAQ,EAAE,kBAACa,CAAD;AAAA,aAAOf,OAAO,CAACe,CAAC,CAACC,MAAF,CAASf,KAAV,CAAd;AAAA,KALZ;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,KAAK,EAAE;AAAEgB,MAAAA,UAAU,EAAEpB;AAAd,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CATF,CAHF,EAiBE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACqB;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BF,SAA/B,CADrB,CAjBF,CADF;AAuBD,CA5CD;;GAAMA,S;;AA8CN,eAAeA,SAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport { useState, ChangeEvent } from 'react';\r\n\r\nconst colorName = () => {\r\n  const [colorName, setColorName] = useState('');\r\n  const [color, setColor] = useState('');\r\n\r\n  let timer: number;\r\n\r\n  function getData(value: string) {\r\n    const time = 1000;\r\n    clearTimeout(timer);\r\n\r\n    timer = window.setTimeout(() => {\r\n      if (value.match(/[0-9a-fA-F]+/)) {\r\n        setColor(`#${value}`);\r\n\r\n        fetch(`https://www.thecolorapi.com/id?hex=${value}`)\r\n          .then((res) => res.json())\r\n          .then((data) => setColorName(data.name.value));\r\n      } else console.log('error');\r\n    }, time);\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"title\">Get any color name</h1>\r\n\r\n      <div className=\"input--container my-5\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Your color\"\r\n          maxLength={6}\r\n          onChange={(e) => getData(e.target.value)}\r\n          required\r\n        />\r\n        <span className=\"hashtag\">\r\n          #<span className=\"color--bar\" style={{ background: color }}></span>\r\n        </span>\r\n      </div>\r\n\r\n      <p className=\"desc\">\r\n        Your color's name: <span className=\"color--name\">{colorName}</span>\r\n      </p>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default colorName;\r\n"]},"metadata":{},"sourceType":"module"}